'use client';

import { useState, useEffect } from 'react';
import { useGlobalWallet } from '../context/GlobalWalletContext';
import { baseSepolia } from '../compatibility/chains-compat';

export default function WalletSelector() {
  const { address, isConnected, chainId, connect, disconnect, isConnecting } = useGlobalWallet();
  const [mounted, setMounted] = useState(false);
  
  // Check if we're on Base Sepolia
  const isOnCorrectNetwork = chainId === baseSepolia.id;

  // Set mounted state once component mounts
  useEffect(() => {
    setMounted(true);
  }, []);

  // Enhanced connect function that ensures wallet popup appears
  const handleConnect = async () => {
    try {
      // This will trigger the wallet popup and prompt for signing
      await connect();
    } catch (error) {
      console.error('Error connecting wallet:', error);
    }
  };

  // Handle network switching
  const handleSwitchNetwork = async () => {
    try {
      // Add network switching logic here when needed
      console.log('Network switching not implemented yet');
    } catch (error) {
      console.error('Error switching network:', error);
    }
  };
  
  // Don't render anything until client-side hydration is complete
  if (!mounted) return null;

  // Check if MetaMask is installed
  const isMetaMaskInstalled = typeof window !== 'undefined' && window.ethereum && window.ethereum.isMetaMask;

  // Not connected - show connect button or MetaMask install prompt
  if (!isConnected) {
    return isMetaMaskInstalled ? (
      <button 
        onClick={handleConnect}
        disabled={isConnecting}
        className="bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded transition-all flex items-center space-x-2 disabled:opacity-50"
      >
        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
        </svg>
        <span>{isConnecting ? 'Connecting...' : 'Connect Wallet'}</span>
      </button>
    ) : (
      <a 
        href="https://metamask.io/download/" 
        target="_blank" 
        rel="noopener noreferrer"
        className="bg-orange-500 hover:bg-orange-600 text-white font-medium py-2 px-4 rounded transition-all flex items-center space-x-2"
      >
        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z" />
        </svg>
        <span>Install MetaMask</span>
      </a>
    );
  }
  
  // Connected - show address and disconnect button
  return (
    <div className="flex items-center space-x-2">
      <div className="text-sm font-medium bg-gray-100 dark:bg-gray-800 py-1 px-3 rounded-full">
        {address?.slice(0, 6)}...{address?.slice(-4)}
      </div>
      
      {!isOnCorrectNetwork && (
        <button 
          onClick={handleSwitchNetwork} 
          className="text-xs bg-yellow-500 hover:bg-yellow-600 text-white py-1 px-2 rounded transition-colors"
        >
          Switch Network
        </button>
      )}
      
      <button
        onClick={disconnect}
        className="text-xs bg-red-500 hover:bg-red-600 text-white py-1 px-2 rounded"
      >
        Disconnect
      </button>
    </div>
  );
}
